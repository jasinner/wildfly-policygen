package com.redhat.prodsec.jboss

import groovy.sql.Sql
import org.hsqldb.jdbc.JDBCDataSource

class Persister{

    Sql db

    Persister(){
            def source = new JDBCDataSource()
            source.database = "jdbc:hsqldb:mem:permissions"
            source.user = "sa"
            source.password = ""
            db = new Sql(source)
    }

    public persist(Set permissions){
        db.execute '''
    DROP    INDEX permissionIdx  IF EXISTS;
    DROP    TABLE Permissions     IF EXISTS;
    CREATE TABLE Permissions (
        permissionId   INTEGER GENERATED BY DEFAULT AS IDENTITY,
        module   VARCHAR(256),
        class    VARCHAR(128),
        name   VARCHAR(256),
        CONSTRAINT FOREIGN KEY name REFERENCES Names name
    );
    CREATE INDEX permissionIdx ON Permisison (permissionId);

    DROP    TABLE Names     IF EXISTS;
    CREATE TABLE Names (
        permissionId INTEGER
        name VARCHAR(256)
        CONSTRAINT FOREIGN KEY permissionId REFERENCES Permissions permissionId
            ON DELETE CASCASE
        );

    DROP TABLE Actions      IF EXISTS;
    CREATE TABLE Actions (
        permissionId INTEGER
        action VARCHAR(128)
        CONSTRANT FOREIGN KEY permissionId REFENCES Permissions permissionId
            ON DELETE CASCASE
        )
'''
    }
}

// jboss/as/module  RuntimePermission * null
// jboss/as/module  RuntimePermission SomePermission null
// jboss/as/security RuntimePermission * null
// jboss/as/module FilePermission /home/jshepher read
// jboss/as/module FilePermission /home/jshepher write
// jboss/as/module FilePermission ${/home/jshepher} read
//
// get all names for a permission if permission doesn't have a name = *
// get the names for a permission